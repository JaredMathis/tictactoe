require=(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
module.exports = assert;

function assert(lambda) {
    let result = lambda();
    if (result !== true) {
        throw new Error('Assert failed: ' + lambda);
    }
}
},{}],2:[function(require,module,exports){
const assert = require("./assert");

module.exports = check;

function check(game) {
    let result;
    result = checkRow(game, 0); if (result.success) return result;
    result = checkRow(game, 1); if (result.success) return result;
    result = checkRow(game, 2); if (result.success) return result;

    result = checkCol(game, 0); if (result.success) return result;
    result = checkCol(game, 1); if (result.success) return result;
    result = checkCol(game, 2); if (result.success) return result;

    result = checkDiag1(game); if (result.success) return result;
    result = checkDiag2(game); if (result.success) return result;

    return result;
}

function checkDiag2(game) {
    let slots = [
        game[0][2], 
        game[1][1], 
        game[2][0], 
    ];
    return winner(slots);
}

function checkDiag1(game) {
    let slots = [
        game[0][0], 
        game[1][1], 
        game[2][2], 
    ];
    return winner(slots);
}

function checkCol(game, col) {
    let slots = [
        game[0][col], 
        game[1][col], 
        game[2][col], 
    ];
    return winner(slots);
}

function checkRow(game, row) {
    let slots = game[row];
    return winner(slots);
}

function winner(slots) {
    let w = slots[0];
    if (slots[1] === w && slots[2] === w) {
        return {
            success: true,
            winner: w,
        };
    }
    return { 
        success: false,
    };
}

(function () {
    let result = check([
        [1,2,3],
        [4,5,6],
        [7,8,9]
    ]);
    assert(() => result.success === false);
})();
(function () {
    let result = check([
        [1,2,'X'],
        [4,'X',6],
        ['X',8,9]
    ]);
    assert(() => result.success === true);
    assert(() => result.winner === 'X');
})();
(function () {
    let result = check([
        ['X',2,3],
        [4,'O',6],
        [7,8,'X']
    ]);
    assert(() => result.success === false);
})();
(function () {
    let result = check([
        [1,2,'X'],
        [4,5,'X'],
        [7,8,'X']
    ]);
    assert(() => result.success === true);
    assert(() => result.winner === 'X');
})();
(function () {
    let result = check([
        [1,'O',3],
        [4,'O',6],
        [7,'O',9]
    ]);
    assert(() => result.success === true);
    assert(() => result.winner === 'O');
})();
(function () {
    let result = check([
        ['X',2,3],
        ['X',5,6],
        ['X',8,9]
    ]);
    assert(() => result.success === true);
    assert(() => result.winner === 'X');
})();
(function () {
    let result = check([
        [1,2,3],
        [4,5,6],
        ['O','O','O'],
    ]);
    assert(() => result.success === true);
    assert(() => result.winner === 'O');
})();
(function () {
    let result = check([
        [1,2,3],
        ['X','X','X'],
        [7,8,9]
    ]);
    assert(() => result.success === true);
    assert(() => result.winner === 'X');
})();
(function () {
    let result = check([
        ['X','X','X'],
        [4,5,6],
        [7,8,9]
    ]);
    assert(() => result.success === true);
    assert(() => result.winner === 'X');
})();
},{"./assert":1}],"/availableCells":[function(require,module,exports){
const newGame = require("./newGame");
const assert = require("./assert");

module.exports = availableCells;

function availableCells(game) {
    let result = [];

    let index = 1;
    game.forEach(row => {
        row.forEach(col => {
            if (col !== 'X' && col !== 'O') {
                result.push(index);
            }
            index++;
        })
    })

    return result;
}

(function () {
    let game = newGame();
    let actual = availableCells(game);
    // console.log({actual});
    let expected = [1,2,3,4,5,6,7,8,9];
    assert(() => JSON.stringify(actual) === JSON.stringify(expected));
})();

(function () {
    let game = newGame();
    game[1][1] = 'X';
    let actual = availableCells(game);
    // console.log({actual});
    let expected = [1,2,3,4,6,7,8,9];
    assert(() => JSON.stringify(actual) === JSON.stringify(expected));
})();
},{"./assert":1,"./newGame":"/newGame"}],"/move":[function(require,module,exports){
const availableCells = require("./availableCells");
const check = require("./check");
const assert = require("./assert");
const newGame = require("./newGame");
const printGame = require("./printGame");

module.exports = move;

function move(game, xChoice) {
    choose(game, xChoice, 'X');
    let result = check(game);
    if (result.success === true) {
        return result;
    }

    let oChoice = getChoice(game);
    if (oChoice !== null) {
        choose(game, oChoice, 'O');
        result = check(game);
    }
    return result;
}

function choose(game, choice, player) {
    let count = 0;
    let boardSize = 3;
    for (let i = 0; i < boardSize; i++) {
        for (let j = 0; j < boardSize; j++) {
            if (game[i][j] === choice) {
                count++;
                game[i][j] = player;
            }
        }
    }
    assert(() => count === 1);
}

function getChoice(game) {
    let ac = availableCells(game);
    if (ac.length === 0) {
        return null;
    }
    let j = JSON.stringify(game);
    let c = {};
    c['[["X",2,3],[4,5,6],[7,8,9]]'] = 5;
    c['[["X","X",3],[4,"O",6],[7,8,9]]'] = 3;
    c['[["X",2,"X"],[4,"O",6],[7,8,9]]'] = 2;
    c['[["X","O","X"],["X","O",6],[7,8,9]]'] = 8;
    c['[["X","X","O"],["X","O",6],[7,8,9]]'] = 7;
    c['[["X","X","O"],[4,"O","X"],[7,8,9]]'] = 7;
    c['[["X","X","O"],["O","O","X"],["X",8,9]]'] = 8;
    c['[["X","X","O"],[4,"O",6],["X",8,9]]'] = 4;
    c['[["X","X","O"],["O","O",6],["X","X",9]]'] = 6;
    c['[["X","X","O"],["O","O",6],["X",8,"X"]]'] = 6;
    c['[["X","X","O"],[4,"O",6],[7,"X",9]]'] = 6;
    c['[["X","X","O"],["X","O","O"],[7,"X",9]]'] = 9;
    c['[["X","X","O"],[4,"O","O"],["X","X",9]]'] = 9;
    c['[["X","X","O"],[4,"O","O"],[7,"X","X"]]'] = 4;
    c['[["X","X","O"],[4,"O",6],[7,8,"X"]]'] = 7;
    c['[["X","O","X"],[4,"O","X"],[7,8,9]]'] = 8;
    c['[["X","O","X"],[4,"O",6],["X",8,9]]'] = 8;
    c['[["X","O","X"],[4,"O",6],[7,"X",9]]'] = 4;
    c['[["X","O","X"],["O","O","X"],[7,"X",9]]'] = 9;
    c['[["X","O","X"],["O","O",6],["X","X",9]]'] = 6;
    c['[["X","O","X"],["O","O",6],[7,"X","X"]]'] = 6;
    c['[["X","O","X"],[4,"O",6],[7,8,"X"]]'] = 8;
    c['[["X",2,3],["X","O",6],[7,8,9]]'] = 7;
    c['[["X","X",3],["X","O",6],["O",8,9]]'] = 3;
    c['[["X",2,"X"],["X","O",6],["O",8,9]]'] = 2;
    c['[["X","O","X"],["X","O","X"],["O",8,9]]'] = 8;
    c['[["X","O","X"],["X","O",6],["O","X",9]]'] = 6;
    c['[["X","O","X"],["X","O",6],["O",8,"X"]]'] = 6;
    c['[["X",2,3],["X","O","X"],["O",8,9]]'] = 8;
    c['[["X","X",3],["X","O","X"],["O","O",9]]'] = 9;
    c['[["X",2,"X"],["X","O","X"],["O","O",9]]'] = 9;
    c['["X",2,3],["X","O","X"],["O","O","X"]]'] = 2;
    c['[["X",2,3],["X","O","X"],["O","O","X"]]'] = 2;
    c['[["X",2,3],["X","O",6],["O","X",9]]'] = 3;
    c['[["X",2,3],["X","O",6],["O",8,"X"]]'] = 3;
    c['[["X",2,3],[4,"O","X"],[7,8,9]]'] = 8;
    c['[["X","X",3],[4,"O","X"],[7,"O",9]]'] = 3;
    c['[["X","X","O"],["X","O","X"],[7,"O",9]]'] = 7;
    c['[["X","X","O"],[4,"O","X"],["X","O",9]]'] = 4;
    c['[["X","X","O"],[4,"O","X"],[7,"O","X"]]'] = 4;
    c['[["X",2,"X"],[4,"O","X"],[7,"O",9]]'] = 2;
    c['[["X",2,3],["X","O","X"],[7,"O",9]]'] = 2;
    c['[["X",2,3],[4,"O","X"],[7,"O","X"]]'] = 2;
    c['[["X",2,3],[4,"O","X"],["X","O",9]]'] = 2;
    c['[["X",2,3],[4,"O",6],["X",8,9]]'] = 4;
    c['[["X",2,3],[4,"O",6],["X",8,9]]'] = 4;
    c['[["X","X",3],[4,"O","O"],["X",8,9]]'] = 4;
    c['[["X",2,"X"],[4,"O","O"],["X",8,9]]'] = 4;
    c['[["X","X",3],["O","O",6],["X",8,9]]'] = 6;
    c['[["X",2,"X"],["O","O",6],["X",8,9]]'] = 6;
    c['[["X",2,3],["O","O","X"],["X",8,9]]'] = 2;
    c['[["X","O","X"],["O","O","X"],["X",8,9]]'] = 8;
    c['[["X","O",3],["O","O","X"],["X","X",9]]'] = 9;
    c['[["X","O",3],["O","O","X"],["X",8,"X"]]'] = 8;
    c['[["X",2,3],["O","O",6],["X","X",9]]'] = 6;
    c['[["X",2,3],["O","O",6],["X",8,"X"]]'] = 6;
    c['[["X",2,3],[4,"O",6],[7,"X",9]]'] = 4;
    c['[["X","X",3],["O","O",6],[7,"X",9]]'] = 6;
    c['[["X",2,"X"],["O","O",6],[7,"X",9]]'] = 6;
    c['[["X",2,3],["O","O","X"],[7,"X",9]]'] = 3;
    c['[["X","X","O"],["O","O","X"],[7,"X",9]]'] = 7;
    c['[["X",2,"O"],["O","O","X"],["X","X",9]]'] = 9;
    c['[["X",2,"O"],["O","O","X"],[7,"X","X"]]'] = 7;
    c['[["X",2,3],["O","O",6],[7,"X","X"]]'] = 7;
    c['[["X","X",3],["O","O",6],["O","X","X"]]'] = 3;
    c['[["X",2,"X"],["O","O",6],["O","X","X"]]'] = 6;
    c['[["X",2,3],["O","O","X"],["O","X","X"]]'] = 3;
    c['["X",2,3],[4,"O",6],[7,8,"X"]]'] = 3;
    c['[["X",2,3],[4,"O",6],[7,8,"X"]]'] = 2;
    c['[["X","O",3],["X","O",6],[7,8,"X"]]'] = 8;
    c['[["X","O",3],[4,"O","X"],[7,8,"X"]]'] = 8;
    c['[["X","O",3],[4,"O",6],["X",8,"X"]]'] = 8;
    c['[["X","O",3],[4,"O",6],[7,"X","X"]]'] = 7;
    c['[["X","O","X"],[4,"O",6],["O","X","X"]]'] = 6;
    c['[["X","O",3],["X","O",6],["O","X","X"]]'] = 3;
    c['[["X","O",3],[4,"O","X"],["O","X","X"]]'] = 3;
    c['[[1,"X",3],[4,5,6],[7,8,9]]'] = 5;
    c['[[1,"X","X"],[4,"O",6],[7,8,9]]'] = 1;
    c['[["O","X","X"],["X","O",6],[7,8,9]]'] = 9;
    c['[["O","X","X"],[4,"O","X"],[7,8,9]]'] = 9;
    c['[["O","X","X"],[4,"O",6],["X",8,9]]'] = 9;
    c['[["O","X","X"],[4,"O",6],[7,"X",9]]'] = 9;
    c['[["O","X","X"],[4,"O",6],[7,8,"X"]]'] = 6;
    c['[["O","X","X"],["X","O","O"],[7,8,"X"]]'] = 7;
    c['[["O","X","X"],[4,"O","O"],["X",8,"X"]]'] = 4;
    c['[["O","X","X"],[4,"O","O"],[7,"X","X"]]'] = 4;
    c['[[1,"X",3],["X","O",6],[7,8,9]]'] = 1;
    c['[["O","X",3],["X","O","X"],[7,8,9]]'] = 9;
    c['[["O","X",3],["X","O",6],["X",8,9]]'] = 9;
    c['[["O","X",3],["X","O",6],[7,"X",9]]'] = 9;
    c['[["O","X",3],["X","O",6],[7,8,"X"]]'] = 3;
    c['[["O","X","O"],["X","O","X"],[7,8,"X"]]'] = 7;
    c['[["O","X","O"],["X","O",6],["X",8,"X"]]'] = 8;
    c['[["O","X","O"],["X","O",6],[7,"X","X"]]'] = 7;
    c['[[1,"X",3],[4,"O","X"],[7,8,9]]'] = 3;
    c['[[1,"X","O"],["X","O","X"],[7,8,9]]'] = 7;
    c['[[1,"X","O"],[4,"O","X"],["X",8,9]]'] = 1;
    c['[["O","X","O"],["X","O","X"],["X",8,9]]'] = 8;
    c['[["O","X","O"],[4,"O","X"],["X","X",9]]'] = 9;
    c['[["O","X","O"],[4,"O","X"],["X",8,"X"]]'] = 8;
    c['[[1,"X","O"],[4,"O","X"],[7,"X",9]]'] = 7;
    c['[[1,"X","O"],[4,"O","X"],[7,8,"X"]]'] = 7;
    c['[[1,"X",3],[4,"O",6],["X",8,9]]'] = 1;
    c['[["O","X",3],[4,"O","X"],["X",8,9]]'] = 9;
    c['[["O","X",3],[4,"O",6],["X","X",9]]'] = 9;
    c['[["O","X",3],[4,"O",6],["X",8,"X"]]'] = 8;
    c['[["O","X","X"],[4,"O",6],["X","O","X"]]'] = 6;
    c['[["O","X",3],["X","O",6],["X","O","X"]]'] = 3;
    c['[["O","X",3],[4,"O","X"],["X","O","X"]]'] = 3;
    c['[[1,"X",3],[4,"O",6],[7,"X",9]]'] = 1;
    c['[["O","X",3],[4,"O","X"],[7,"X",9]]'] = 9;
    c['[["O","X",3],[4,"O",6],[7,"X","X"]]'] = 7;
    c['[["O","X","X"],[4,"O",6],["O","X","X"]]'] = 6;
    c['[["O","X",3],["X","O",6],["O","X","X"]]'] = 6;
    c['[["O","X",3],[4,"O","X"],["O","X","X"]]'] = 4;
    c['[[1,"X",3],[4,"O",6],[7,8,"X"]]'] = 4;
    c['[["X","X",3],["O","O",6],[7,8,"X"]]'] = 3;
    c['[["X","X","O"],["O","O","X"],[7,8,"X"]]'] = 7;
    c['[["X","X","O"],["O","O",6],[7,"X","X"]]'] = 7;
    c['[[1,"X","X"],["O","O",6],[7,8,"X"]]'] = 6;
    c['[[1,"X",3],["O","O","X"],[7,8,"X"]]'] = 3;
    c['[[1,"X","O"],["O","O","X"],["X",8,"X"]]'] = 8;
    c['[[1,"X","O"],["O","O","X"],[7,"X","X"]]'] = 7;
    c['[[1,"X",3],["O","O",6],["X",8,"X"]]'] = 6;
    c['[[1,"X",3],["O","O",6],[7,"X","X"]]'] = 6;
    c['[[1,"X",3],["O","O",6],[7,"X","X"]]'] = 6;
    c['[[1,2,"X"],[4,5,6],[7,8,9]]'] = 5;
    c['[[1,2,"X"],["X","O",6],[7,8,9]]'] = 1;
    c['[["O",2,"X"],["X","O","X"],[7,8,9]]'] = 9;
    c['[["O",2,"X"],["X","O",6],["X",8,9]]'] = 9;
    c['[["O",2,"X"],["X","O",6],[7,"X",9]]'] = 9;
    c['[["O",2,"X"],["X","O",6],[7,8,"X"]]'] = 6;
    c['[["O",2,"X"],["X","O","O"],["X",8,"X"]]'] = 8;
    c['[["O",2,"X"],["X","O","O"],[7,"X","X"]]'] = 7;
    c['[[1,2,"X"],[4,"O","X"],[7,8,9]]'] = 9;
    c['[["X",2,"X"],[4,"O","X"],[7,8,"O"]]'] = 2;
    c['[["X","O","X"],["X","O","X"],[7,8,"O"]]'] = 7;
    c['[["X","O","X"],[4,"O","X"],["X",8,"O"]]'] = 4;
    c['[["X","O","X"],[4,"O","X"],[7,"X","O"]]'] = 4;
    c['[[1,"X","X"],[4,"O","X"],[7,8,"O"]]'] = 1;
    c['[[1,2,"X"],["X","O","X"],[7,8,"O"]]'] = 8;
    c['[["X",2,"X"],["X","O","X"],[7,"O","O"]]'] = 7;
    c['[[1,"X","X"],["X","O","X"],[7,"O","O"]]'] = 7;
    c['[[1,2,"X"],["X","O","X"],["X","O","O"]]'] = 1;
    c['[[1,2,"X"],[4,"O","X"],["X",8,"O"]]'] = 1;
    c['[[1,2,"X"],[4,"O","X"],[7,"X","O"]]'] = 1;
    c['[[1,2,"X"],[4,"O",6],["X",8,9]]'] = 2;
    c['[[1,"O","X"],["X","O",6],["X",8,9]]'] = 8;
    c['[[1,"O","X"],[4,"O","X"],["X",8,9]]'] = 8;
    c['[[1,"O","X"],[4,"O",6],["X","X",9]]'] = 9;
    c['[["X","O","X"],[4,"O",6],["X","X","O"]]'] = 4;
    c['[[1,"O","X"],["X","O",6],["X","X","O"]]'] = 1;
    c['[[1,"O","X"],[4,"O","X"],["X","X","O"]]'] = 1;
    c['[[1,"O","X"],[4,"O",6],["X",8,"X"]]'] = 8;
    c['[[1,2,"X"],[4,"O",6],[7,"X",9]]'] = 9;
    c['[["X",2,"X"],[4,"O",6],[7,"X","O"]]'] = 2;
    c['[["X","O","X"],["X","O",6],[7,"X","O"]]'] = 7;
    c['[[1,"X","X"],[4,"O",6],[7,"X","O"]]'] = 1;
    c['[[1,2,"X"],["X","O",6],[7,"X","O"]]'] = 1;
    c['[[1,2,"X"],[4,"O",6],["X","X","O"]]'] = 1;
    c['[[1,2,"X"],[4,"O",6],[7,8,"X"]]'] = 6;
    c['[["X",2,"X"],[4,"O","O"],[7,8,"X"]]'] = 4;
    c['[[1,"X","X"],[4,"O","O"],[7,8,"X"]]'] = 4;
    c['[[1,2,"X"],["X","O","O"],[7,8,"X"]]'] = 2;
    c['[["X","O","X"],["X","O","O"],[7,8,"X"]]'] = 8;
    c['[[1,"O","X"],["X","O","O"],["X",8,"X"]]'] = 8;
    c['[[1,"O","X"],["X","O","O"],[7,"X","X"]]'] = 7;
    c['[[1,2,"X"],[4,"O","O"],["X",8,"X"]]'] = 8;
    c['[["X",2,"X"],[4,"O","O"],["X","O","X"]]'] = 2;
    c['[[1,"X","X"],[4,"O","O"],["X","O","X"]]'] = 4;
    c['[[1,2,"X"],["X","O","O"],["X","O","X"]]'] = 2;
    c['[[1,2,"X"],[4,"O","O"],[7,"X","X"]]'] = 4;
    c['[[1,2,3],["X",5,6],[7,8,9]]'] = 5;
    c['[[1,2,3],["X","O","X"],[7,8,9]]'] = 1;
    c['[["O",2,3],["X","O","X"],["X",8,9]]'] = 9;
    c['[["O",2,3],["X","O","X"],[7,"X",9]]'] = 9;
    c['[["O",2,3],["X","O","X"],[7,8,"X"]]'] = 3;
    c['[["O",2,"O"],["X","O","X"],["X",8,"X"]]'] = 2;
    c['[["O",2,"O"],["X","O","X"],[7,"X","X"]]'] = 7;
    c['[[1,2,3],["X","O",6],["X",8,9]]'] = 1;
    c['[["O",2,3],["X","O",6],["X","X",9]]'] = 9;
    c['[["O",2,3],["X","O",6],["X",8,"X"]]'] = 8;
    c['[["O",2,"X"],["X","O",6],["X","O","X"]]'] = 2;
    c['[["O",2,3],["X","O","X"],["X","O","X"]]'] = 2;
    c['[[1,2,3],["X","O",6],[7,"X",9]]'] = 7;
    c['[[1,"X",3],["X","O",6],["O","X",9]]'] = 3;
    c['[[1,2,"X"],["X","O",6],["O","X",9]]'] = 1;
    c['[["O","X","X"],["X","O",6],["O","X",9]]'] = 6;
    c['[["O",2,"X"],["X","O","X"],["O","X",9]]'] = 9;
    c['[["O",2,"X"],["X","O",6],["O","X","X"]]'] = 6;
    c['[[1,2,3],["X","O","X"],["O","X",9]]'] = 1;
    c['[["O","X",3],["X","O","X"],["O","X",9]]'] = 9;
    c['[["O",2,3],["X","O","X"],["O","X","X"]]'] = 3;
    c['[[1,2,3],["X","O",6],["O","X","X"]]'] = 3;
    c['[[1,2,3],["X","O",6],[7,8,"X"]]'] = 7;
    c['[[1,"X",3],["X","O",6],["O",8,"X"]]'] = 3;
    c['[[1,2,"X"],["X","O",6],["O",8,"X"]]'] = 6;
    c['[["X",2,"X"],["X","O","O"],["O",8,"X"]]'] = 2;
    c['[[1,"X","X"],["X","O","O"],["O",8,"X"]]'] = 1;
    c['[[1,2,"X"],["X","O","O"],["O","X","X"]]'] = 1;
    c['[[1,2,3],["X","O","X"],["O",8,"X"]]'] = 3;
    c['[[1,2,3],[4,"X",6],[7,8,9]]'] = 1;
    c['[["O","X",3],[4,"X",6],[7,8,9]]'] = 8;
    c['[["O","X","X"],[4,"X",6],[7,"O",9]]'] = 7;
    c['[["O","X","X"],["X","X",6],["O","O",9]]'] = 9;
    c['[["O","X","X"],[4,"X","X"],["O","O",9]]'] = 9;
    c['[["O","X","X"],[4,"X",6],["O","O","X"]]'] = 6;
    c['[["O","X",3],["X","X",6],[7,"O",9]]'] = 6;
    c['[["O","X","X"],["X","X","O"],[7,"O",9]]'] = 7;
    c['[["O","X",3],["X","X","O"],["X","O",9]]'] = 3;
    c['[["O","X",3],["X","X","O"],[7,"O","X"]]'] = 3;
    c['[["O","X",3],[4,"X","X"],[7,"O",9]]'] = 4;
    c['[["O","X","X"],["O","X","X"],[7,"O",9]]'] = 7;
    c['[["O","X",3],["O","X","X"],["X","O",9]]'] = 3;
    c['[["O","X",3],["O","X","X"],[7,"O","X"]]'] = 3;
    c['[["O","X",3],[4,"X",6],["X","O",9]]'] = 3;
    c['[["O","X","O"],["X","X",6],["X","O",9]]'] = 6;
    c['[["O","X","O"],[4,"X","X"],["X","O",9]]'] = 4;
    c['[["O","X","O"],[4,"X",6],["X","O","X"]]'] = 4;
    c['[["O","X",3],[4,"X",6],[7,"O","X"]]'] = 4;
    c['[["O","X","X"],["O","X",6],[7,"O","X"]]'] = 7;
    c['[["O","X",3],["O","X",6],["X","O","X"]]'] = 3;
    c['[["O",2,"X"],[4,"X",6],[7,8,9]]'] = 7;
    c['[["O","X","X"],[4,"X",6],["O",8,9]]'] = 8;
    c['[["O",2,"X"],["X","X",6],["O",8,9]]'] = 6;
    c['[["O","X","X"],["X","X","O"],["O",8,9]]'] = 8;
    c['[["O",2,"X"],["X","X","O"],["O","X",9]]'] = 2;
    c['[["O",2,"X"],["X","X","O"],["O",8,"X"]]'] = 2;
    c['[["O",2,"X"],[4,"X","X"],["O",8,9]]'] = 4;
    c['[["O",2,"X"],[4,"X",6],["O","X",9]]'] = 4;
    c['[["O",2,"X"],[4,"X",6],["O",8,"X"]]'] = 4;
    c['[["O",2,3],["X","X",6],[7,8,9]]'] = 6;
    c['[["O","X",3],["X","X","O"],[7,8,9]]'] = 8;
    c['[["O",2,"X"],["X","X","O"],[7,8,9]]'] = 7;
    c['[["O",2,3],["X","X","O"],["X",8,9]]'] = 3;
    c['[["O","X","O"],["X","X","O"],["X",8,9]]'] = 8;
    c['[["O",2,"O"],["X","X","O"],["X","X",9]]'] = 2;
    c['[["O",2,"O"],["X","X","O"],["X",8,"X"]]'] = 2;
    c['[["O",2,3],["X","X","O"],[7,"X",9]]'] = 2;
    c['[["O","O","X"],["X","X","O"],[7,"X",9]]'] = 7;
    c['[["O","O",3],["X","X","O"],["X","X",9]]'] = 3;
    c['[["O","O",3],["X","X","O"],[7,"X","X"]]'] = 7;
    c['[["O",2,3],["X","X","O"],[7,8,"X"]]'] = 2;
    c['[["O","O","X"],["X","X","O"],[7,8,"X"]]'] = 7;
    c['[["O","O",3],["X","X","O"],["X",8,"X"]]'] = 3;
    c['[["O",2,3],[4,"X","X"],[7,8,9]]'] = 4;
    c['[["O","X",3],["O","X","X"],[7,8,9]]'] = 7;
    c['[["O",2,"X"],["O","X","X"],[7,8,9]]'] = 7;
    c['[["O",2,3],["O","X","X"],["X",8,9]]'] = 3;
    c['[["O","X","O"],["O","X","X"],["X",8,9]]'] = 8;
    c['[["O",2,"O"],["O","X","X"],["X","X",9]]'] = 2;
    c['[["O",2,"O"],["O","X","X"],["X",8,"X"]]'] = 8;
    c['[["O",2,3],["O","X","X"],[7,"X",9]]'] = 7;
    c['[["O",2,3],["O","X","X"],[7,8,"X"]]'] = 7;
    c['[["O",2,3],[4,"X",6],["X",8,9]]'] = 3;
    c['[["O","X","O"],[4,"X",6],["X",8,9]]'] = 8;
    c['[["O",2,"O"],["X","X",6],["X",8,9]]'] = 2;
    c['[["O",2,"O"],["X","X",6],["X",8,9]]'] = 2;
    c['[["O",2,"O"],[4,"X","X"],["X",8,9]]'] = 2;
    c['[["O",2,"O"],[4,"X",6],["X","X",9]]'] = 2;
    c['[["O",2,"O"],[4,"X",6],["X",8,"X"]]'] = 2;
    c['[["O",2,3],[4,"X",6],[7,"X",9]]'] = 2;
    c['[["O","O","X"],[4,"X",6],[7,"X",9]]'] = 7;
    c['[["O","O","X"],["X","X",6],["O","X",9]]'] = 6;
    c['[["O","O","X"],[4,"X","X"],["O","X",9]]'] = 4;
    c['[["O","O","X"],[4,"X",6],["O","X","X"]]'] = 4;
    c['[["O","O",3],["X","X",6],[7,"X",9]]'] = 3;
    c['[["O","O",3],[4,"X","X"],[7,"X",9]]'] = 3;
    c['[["O","O",3],[4,"X",6],["X","X",9]]'] = 3;
    c['[["O","O",3],[4,"X",6],[7,"X","X"]]'] = 3;
    c['[["O",2,3],[4,"X",6],[7,8,"X"]]'] = 3;
    // TODO: Make sure these next several are needed
    (function () {
        c['[["O","X",3],[4,"X","O"],[7,8,"X"]]'] = 8;
        c['[["O","X","X"],[4,"X","O"],[7,"O","X"]]'] = 7;
        c['[["O","X",3],[4,"X","O"],["X","O","X"]]'] = 3;
        c['[["O",2,"X"],[4,"X","O"],[7,8,"X"]]'] = 7;
        c['[["O","X","X"],[4,"X","O"],["O",8,"X"]]'] = 8;
        c['[["O",2,"X"],[4,"X","O"],["O","X","X"]]'] = 4;
        c['[["O",2,3],[4,"X","O"],["X",8,"X"]]'] = 3;
        c['[["O","X","O"],[4,"X","O"],["X",8,"X"]]'] = 8;
    })();
    c['[["O","X","O"],[4,"X",6],[7,8,"X"]]'] = 8;
    c['[["O","X","O"],["X","X",6],[7,"O","X"]]'] = 6;
    c['[["O","X","O"],[4,"X","X"],[7,"O","X"]]'] = 4;
    c['[["O",2,"O"],["X","X",6],[7,8,"X"]]'] = 6;
    c['[["O","X","O"],["X","X","O"],[7,8,"X"]]'] = 8;
    c['[["O",2,"O"],["X","X","O"],[7,"X","X"]]'] = 2;
    c['[["O",2,"O"],[4,"X","X"],[7,8,"X"]]'] = 2;
    c['[["O",2,"O"],[4,"X",6],[7,"X","X"]]'] = 2;
    c['[[1,2,3],[4,5,"X"],[7,8,9]]'] = 5;
    c['[[1,2,3],[4,"O","X"],["X",8,9]]'] = 8;
    c['[[1,2,3],[4,"O","X"],["X",8,9]]'] = 8;
    c['[[1,"X",3],[4,"O","X"],["X","O",9]]'] = 1;
    c['[["O","X","X"],[4,"O","X"],["X","O",9]]'] = 9;
    c['[["O","X",3],["X","O","X"],["X","O",9]]'] = 9;
    c['[[1,2,"X"],[4,"O","X"],["X","O",9]]'] = 9;
    c['[["X",2,"X"],[4,"O","X"],["X","O","O"]]'] = 2;
    c['[[1,"X","X"],[4,"O","X"],["X","O","O"]]'] = 1;
    c['[[1,2,3],["X","O","X"],["X","O",9]]'] = 2;
    c['[[1,2,3],[4,"O","X"],["X","O","X"]]'] = 2;
    c['[[1,2,3],[4,"O","X"],[7,"X",9]]'] = 9;
    c['[["X",2,3],[4,"O","X"],[7,"X","O"]]'] = 3;
    c['[["X","X","O"],[4,"O","X"],[7,"X","O"]]'] = 7;
    c['[["X",2,"O"],["X","O","X"],[7,"X","O"]]'] = 7;
    c['[["X",2,"O"],[4,"O","X"],["X","X","O"]]'] = 4;
    c['[[1,"X",3],[4,"O","X"],[7,"X","O"]]'] = 7;
    c['[["X","X",3],[4,"O","X"],["O","X","O"]]'] = 3;
    c['[[1,"X","X"],[4,"O","X"],["O","X","O"]]'] = 1;
    c['[[1,"X",3],["X","O","X"],["O","X","O"]]'] = 1;
    c['[[1,2,3],["X","O","X"],[7,"X","O"]]'] = 1;
    c['[[1,2,3],[4,"O","X"],["X","X","O"]]'] = 1;
    c['[[1,2,3],[4,"O","X"],[7,8,"X"]]'] = 3;
    c['[["X",2,"O"],[4,"O","X"],[7,8,"X"]]'] = 7;
    c['[[1,2,"O"],["X","O","X"],[7,8,"X"]]'] = 7;
    c['[[1,2,"O"],[4,"O","X"],["X",8,"X"]]'] = 8;
    c['[["X",2,"O"],[4,"O","X"],["X","O","X"]]'] = 2;
    c['[[1,"X","O"],[4,"O","X"],["X","O","X"]]'] = 1;
    c['[[1,2,"O"],["X","O","X"],["X","O","X"]]'] = 2;
    c['[[1,2,"O"],[4,"O","X"],[7,"X","X"]]'] = 7;
    c['[[1,2,3],[4,5,6],["X",8,9]]'] = 5;
    c['[[1,2,3],[4,"O",6],["X","X",9]]'] = 9;
    c['[["X",2,3],[4,"O",6],["X","X","O"]]'] = 4;
    c['[["X","X",3],["O","O",6],["X","X","O"]]'] = 3;
    c['[["X",2,"X"],["O","O",6],["X","X","O"]]'] = 2;
    c['[["X",2,3],["O","O","X"],["X","X","O"]]'] = 2;
    c['[[1,"X",3],[4,"O",6],["X","X","O"]]'] = 6;
    c['[["X","X",3],[4,"O","O"],["X","X","O"]]'] = 3;
    c['[[1,"X","X"],[4,"O","O"],["X","X","O"]]'] = 4;
    c['[[1,"X",3],["X","O","O"],["X","X","O"]]'] = 3;
    c['[[1,2,3],["X","O",6],["X","X","O"]]'] = 1;
    c['[[1,2,3],[4,"O",6],["X",8,"X"]]'] = 8;
    c['[["X",2,3],[4,"O",6],["X","O","X"]]'] = 2;
    c['[[1,"X",3],[4,"O",6],["X","O","X"]]'] = 4;
    c['[["X","X",3],["O","O",6],["X","O","X"]]'] = 3;
    c['[[1,"X","X"],["O","O",6],["X","O","X"]]'] = 6;
    c['[[1,"X",3],["O","O","X"],["X","O","X"]]'] = 3;
    c['[[1,2,"X"],[4,"O",6],["X","O","X"]]'] = 2;
    c['[[1,2,3],["X","O",6],["X","O","X"]]'] = 2;
    c['[[1,2,3],[4,5,6],[7,"X",9]]'] = 5;
    c['[[1,2,3],[4,"O",6],[7,"X","X"]]'] = 7;
    c['[["X",2,3],[4,"O",6],["O","X","X"]]'] = 3;
    c['[[1,"X",3],[4,"O",6],["O","X","X"]]'] = 3;
    c['[[1,2,"X"],[4,"O",6],["O","X","X"]]'] = 6;
    c['[["X",2,"X"],[4,"O","O"],["O","X","X"]]'] = 4;
    c['[[1,"X","X"],[4,"O","O"],["O","X","X"]]'] = 4;
    c['[[1,2,3],[4,"O","X"],["O","X","X"]]'] = 3;
    c['[[1,2,3],[4,5,6],[7,8,"X"]]'] = 5;
    
    //console.log(j);
    if (!c[j]) {
        printGame(game);
        throw new Error('getChoice: not implemented. j: ' + j);
    }
    assert(() => ac.includes(c[j]));
    return c[j];
}

function clone (game) {
    return JSON.parse(JSON.stringify(game));
}

function iterate(game, choices) {
    if (!choices) {
        choices = [];
    }
    let ac = availableCells(game);
    ac.forEach(a => {
        choices.push(a);
        let copy = clone(game);
        let result = move(copy, a);
        if (result.success) {
            if (result.winner === 'X') {
                console.log({choices});
            }
            assert(() => result.winner === 'O');
        } else {
            iterate(copy, choices);
        }
        choices.pop();
    })
}

(function () {
    let game = newGame();
   iterate(game);
})();

},{"./assert":1,"./availableCells":"/availableCells","./check":2,"./newGame":"/newGame","./printGame":"/printGame"}],"/newGame":[function(require,module,exports){
const assert = require("./assert");

module.exports = newGame;

function newGame() {
    let index = 1;
    let result = [];
    let boardSize = 3;
    for (let i = 0; i < boardSize; i++) {
        result.push([]);
        for (let j = 0; j < boardSize; j++) {
            result[i].push(index);
            index++;
        }
    }
    return result;
}

(function () {
    let actual = newGame();
    //console.log(actual)
    let expected = [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ];
    assert(() => JSON.stringify(expected) === JSON.stringify(actual));
})();
},{"./assert":1}],"/printGame":[function(require,module,exports){
module.exports = printGame;

function printGame(game) {
    printRow(game[0]);
    printEmptyRow();
    printRow(game[1]);
    printEmptyRow();
    printRow(game[2]);
}

function printRow(row) {
    console.log(row.join('|'));
}

function printEmptyRow() {
    console.log(`-----`);
}
},{}]},{},[]);
